#include "services_dune.fcl"
#include "nusonic_imagepatternalgs.fcl"

# Example configuration of job applying CNN-based selection of
# EM-like activity (3 outputs: [track, em, none]) on the level
# of tracks / clusters / single hits.
# The same configuration can be used for other CNN models, trained
# to distinguish also Michel electrons or tagging vertices.
# Configured for ProtoDUNE, hopefully straight-forward to adopt
# to other experiments.

process_name: SonicEmTrackId

services:
{
  TFileService: { fileName: "nusonic_reco_hist.root" }
  MemoryTracker:     {}
  TimeTracker:       {}
  RandomNumberGenerator: {} #ART native random number generator
  message:              @local::dune_message_services_prod_debug
  FileCatalogMetadata:  @local::art_file_catalog_mc
                        @table::protodune_services
}

source:
{
  module_type: RootInput
  maxEvents:  -1        # Number of events to create
}

physics:
{
 producers:
 {
  #emtrackid:      @local::standard_emtrackclusterid # uses 3-outs CNN model
  #emtrkmichelid:  @local::standard_emtrackmichelid   # uses 4-outs model
  sonicemtrackmichelid:  @local::nusonic_emtrackmichelid   # uses 4-outs model
 }

 reco: [ sonicemtrackmichelid ]
 stream1: [ out1 ]

 trigger_paths: [ reco ]
 end_paths:     [ stream1 ]
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "%ifb_%tc_reco.root"
   dataTier:    "full-reconstructed"
   compressionLevel: 1
 }
}

